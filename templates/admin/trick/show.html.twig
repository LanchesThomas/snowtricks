{% extends 'base.html.twig' %}

{% block title %}{{trick.name}}{% endblock %}
{% block head %}
    <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
    />
{% endblock %}

{% block body %}
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script type="module" >

        var swiper = new Swiper(".swiper-trick", {
            slidesPerView: 1,
            spaceBetween: 16,
            loop: true,
            watchOverflow: true,
            navigation: {
                nextEl: ".swiper-next",
                prevEl: ".swiper-prev",
            },
            breakpoints: {
                767: {
                    slidesPerView: 2,
                },
                992: {
                    slidesPerView: 3,
                }
            }
        });



    loadMoreComments();



function loadMoreComments() {
    let everyComments = document.querySelectorAll('.comment-wrapper[data-page]');

    if (!everyComments.length) return false;
    console.log('load');

    let totalPages = parseInt(document.querySelector('#comments-pagination').getAttribute('data-total-pages'));
    let nextPageButton = document.querySelector('#load-next-comments');
    let previousPageButton = document.querySelector('#load-previous-comments');
    let currentPage = parseInt(document.querySelector('#comments-pagination').getAttribute('data-current-page'));
    let currentPageNumber = document.querySelector('#current-page-number');

    nextPageButton.addEventListener('click', function (e) {
        e.preventDefault();
        console.log('nextr');
        currentPage++;
        currentPageNumber.textContent = String(currentPage);
        updatePage();
    })

    previousPageButton.addEventListener('click', function (e) {
        e.preventDefault();
        console.log('nextr');
        currentPage--;
        currentPageNumber.textContent = String(currentPage);
        updatePage();
    })

    function updatePage() {
        everyComments.forEach(function (comment) {
            if (parseInt(comment.getAttribute('data-page')) !== currentPage) {
                comment.classList.add('hide');
            } else {
                comment.classList.remove('hide');
            }
        })

        if (currentPage >= totalPages) {
            nextPageButton.classList.add('hide');
        } else {
            nextPageButton.classList.remove('hide');
        }

        if (currentPage > 1) {
            previousPageButton.classList.remove('hide');
        } else {
            previousPageButton.classList.add('hide');
        }

        document.querySelector('#comments-pagination').setAttribute('data-current-page', String(currentPage));
    }
}
</script>

    {% set firstImageUrl = 'images/fond.jpg' %}  {# Valeur par défaut si aucune image n'est trouvée #}
    {% set foundImage = false %}  {# Variable pour savoir si une image a été trouvée #}

    {% for media in trick.media %}
        {% if not media.isVideo and not foundImage %}
            {% set firstImageUrl = asset(media.url) %}
            {% set foundImage = true %}
        {% endif %}
    {% endfor %}

    <section class="hero-section" style="background-image: url('{{ firstImageUrl }}')">


        <div class="container-standard no-pad">
            <div class="hero-wrapper">
                <p class="p-2 bg-white rounded-md z-1 uppercase font-extrabold">{{trick.groupname.name}}</p>
                <h1 class="heading-1 z-1">{{trick.name}}</h1>
            </div>
        </div>
        {% if app.user %}
        <div class="flex gap-2 absolute top-4 right-4">
            <a href="{{ path('app_admin_trick_edit', {slug: trick.slug}) }}" class="w-10 h-10 block bg-green-700 p-2 border border-white rounded-full text-white">{{ ux_icon('solar:pen-outline') }}</a>
            <form method="post" action="{{ path('app_admin_trick_delete', {slug: trick.slug}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce trick ?');" >
                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ trick.id) }}">
                <button class="w-10 h-10 block bg-red-700 p-2 border border-white rounded-full text-white">{{ ux_icon('guidance:bin') }}</button>
            </form>
        </div>
        {% endif %}
        <div class="linear-g-absolute"></div>
    </section>

    {% for type, messages in app.flashes %}
        <div class="container-standard py-10">
            {% for message in messages %}
                <div class="alert alert-{{ type }}">
                    {{ message }}
                </div>
            {% endfor %}
        </div>  
    {% endfor %}


{% if trick.media %}
    <section class="trick-media-section">
        <div class="container-standard relative">
            <div class="grid-5 swiper swiper-trick">
                <div class="swiper-wrapper">
                    {% for media in trick.media %}
                        <div class="trick-card relative h-[300px] swiper-slide object-cover"> 
                            {% if media.isVideo %}
                                <iframe 
                                    width="100%" height="100%" 
                                    src="https://www.youtube.com/embed/{{ media.videoUrl | slice(17) }}" 
                                    title="Vidéo du trick" 
                                    frameborder="0" 
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                                    referrerpolicy="strict-origin-when-cross-origin" 
                                    allowfullscreen>
                                </iframe>
                            {% else %}
                                <img src="{{ media.url }}" class="object-cover h-full">
                                
                            {% endif %}
                            <div class="linear-g-absolute"></div>
                        </div>
                    {% endfor %}
                </div>
            </div>
            <div class="swiper-next">{{ ux_icon('material-symbols-light:chevron-right') }}</div>
            <div class="swiper-prev">{{ ux_icon('material-symbols-light:chevron-left') }}</div>
        </div>
    </section>
{% endif %}

    <section class="trick-desc-section">
        <div class="container-standard">
            <div class="trick-desc-wrapper">
                <p class="main-text">{{trick.description|nl2br}}</p>
            </div>
        </div>
    </section>

    {% set page = 1 %}
    {% set commentsPerPage = 10 %}
    {% set totalPages = (trick.comments|length/commentsPerPage)|round(0, 'ceil') %}

    <section class="comments-section">
        <div class="container-standard">
            <div class="flex-v gap-32">
                {% if trick.comments is not empty %}
                <div class="flex-v gap-16">
                    <h2 class="heading-2">Commentaires</h2>

                {% if trick.comments|length > commentsPerPage %}
                    <div class="actions comments-pagination flex justify-between items-center" id="comments-pagination" data-total-pages="{{ totalPages }}" data-current-page="1">
                        <p class="pagination-number text-xl font-extrabold"><span id="current-page-number">1</span><span>/{{ totalPages }}</span></p>
                        <div class="flex gap-2">
                            <a class="hide p-2 bg-[#08334417] rounded-md" id="load-previous-comments" href="#">
                                Précédent
                            </a>
                            <a class="p-2 bg-[#08334417] rounded-md" id="load-next-comments" href="#">
                                Suivant
                            </a>
                        </div>
                    </div>
                {% endif %}

                    <div class="comments-wrapper">
                    {% for comment in (trick.comments|default([]))|reverse %}
                        <div class="comment-wrapper {{ page != 1 ? 'hide' : '' }}" data-page="{{ page }}">
                            <div class="flex gap-2 items-center">
                                <div style="background-image: url('{{ asset(comment.userid.profilePicture) }}')" class="rounded-full bg-cover min-w-4 min-h-4"></div>
                                <p class="comment-author">{{ comment.userid.username }}</p>
                            </div>
                            <p>{{ comment.content }}</p>
                            <p class="self-end">{{ comment.createdat|date("d/m/Y") }}</p>
                        </div>

                         {% if loop.index is divisible by(commentsPerPage) %}
                            {% set page = page + 1 %}
                        {% endif %}
                    {% endfor %}
                    </div>
                </div>
                {% endif %}




                {% if is_granted('ROLE_USER') %}
                <div class="flex-v gap-16">
                    <h2 class="heading-2">Ajouter un commentaire</h2>
                        {{ form_start(commentForm) }}
                        {{ form_row(commentForm.content) }}
                        <button type="submit" class="btn btn-primary">Envoyer</button>
                        {{ form_end(commentForm) }}
                    {% else %}
                        <div class="p-4 bg-[#08334405] rounded-sm self-center">
                            <p>Veuillez vous <a class="underline font-bold" href="/">connecter</a> pour laisser un commentaire.</p>
                        </div>
                </div>
                {% endif %}
            </div>
        </div>
    </section>


{% endblock %}
